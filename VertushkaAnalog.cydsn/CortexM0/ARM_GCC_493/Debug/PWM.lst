ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_Enable,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_Enable
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_Enable, %function
  23              	PWM_Enable:
  24              	.LFB2:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM.c"
   1:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:.\Generated_Source\PSoC4/PWM.c **** * Version 3.30
   4:.\Generated_Source\PSoC4/PWM.c **** *
   5:.\Generated_Source\PSoC4/PWM.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/PWM.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/PWM.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/PWM.c **** *
  15:.\Generated_Source\PSoC4/PWM.c **** * Note:
  16:.\Generated_Source\PSoC4/PWM.c **** *
  17:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/PWM.c **** 
  24:.\Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  25:.\Generated_Source\PSoC4/PWM.c **** 
  26:.\Generated_Source\PSoC4/PWM.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC4/PWM.c **** #ifdef PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/PWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/PWM.c **** #endif /* PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/PWM.c **** 
  32:.\Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 2


  33:.\Generated_Source\PSoC4/PWM.c **** 
  34:.\Generated_Source\PSoC4/PWM.c **** 
  35:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
  37:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/PWM.c **** *
  39:.\Generated_Source\PSoC4/PWM.c **** * Summary:
  40:.\Generated_Source\PSoC4/PWM.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/PWM.c **** *
  44:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
  45:.\Generated_Source\PSoC4/PWM.c **** *  None
  46:.\Generated_Source\PSoC4/PWM.c **** *
  47:.\Generated_Source\PSoC4/PWM.c **** * Return:
  48:.\Generated_Source\PSoC4/PWM.c **** *  None
  49:.\Generated_Source\PSoC4/PWM.c **** *
  50:.\Generated_Source\PSoC4/PWM.c **** * Global variables:
  51:.\Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/PWM.c **** *
  54:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/PWM.c **** void PWM_Start(void) 
  56:.\Generated_Source\PSoC4/PWM.c **** {
  57:.\Generated_Source\PSoC4/PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/PWM.c ****     if(PWM_initVar == 0u)
  59:.\Generated_Source\PSoC4/PWM.c ****     {
  60:.\Generated_Source\PSoC4/PWM.c ****         PWM_Init();
  61:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
  62:.\Generated_Source\PSoC4/PWM.c ****     }
  63:.\Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
  64:.\Generated_Source\PSoC4/PWM.c **** 
  65:.\Generated_Source\PSoC4/PWM.c **** }
  66:.\Generated_Source\PSoC4/PWM.c **** 
  67:.\Generated_Source\PSoC4/PWM.c **** 
  68:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  70:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/PWM.c **** *
  72:.\Generated_Source\PSoC4/PWM.c **** * Summary:
  73:.\Generated_Source\PSoC4/PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/PWM.c **** *  PWM_Start().
  76:.\Generated_Source\PSoC4/PWM.c **** *
  77:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
  78:.\Generated_Source\PSoC4/PWM.c **** *  None
  79:.\Generated_Source\PSoC4/PWM.c **** *
  80:.\Generated_Source\PSoC4/PWM.c **** * Return:
  81:.\Generated_Source\PSoC4/PWM.c **** *  None
  82:.\Generated_Source\PSoC4/PWM.c **** *
  83:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/PWM.c **** void PWM_Init(void) 
  85:.\Generated_Source\PSoC4/PWM.c **** {
  86:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction || PWM_UseControl)
  87:.\Generated_Source\PSoC4/PWM.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction || PWM_UseControl) */
  89:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 3


  90:.\Generated_Source\PSoC4/PWM.c ****     #if(!PWM_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/PWM.c ****         #if(PWM_UseStatus)
  92:.\Generated_Source\PSoC4/PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/PWM.c ****             uint8 PWM_interruptState;
  94:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
  95:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/PWM.c **** 
  97:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL |= PWM_CFG0_MODE;
 100:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_DeadBand2_4)
 101:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL |= PWM_CFG0_DB;
 102:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/PWM.c **** 
 104:.\Generated_Source\PSoC4/PWM.c ****         ctrl = PWM_CONTROL3 & ((uint8 )(~PWM_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL3 = ctrl | PWM_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/PWM.c **** 
 107:.\Generated_Source\PSoC4/PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/PWM.c ****         PWM_RT1 &= ((uint8)(~PWM_RT1_MASK));
 109:.\Generated_Source\PSoC4/PWM.c ****         PWM_RT1 |= PWM_SYNC;
 110:.\Generated_Source\PSoC4/PWM.c **** 
 111:.\Generated_Source\PSoC4/PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/PWM.c ****         PWM_RT1 &= ((uint8)(~PWM_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/PWM.c ****         PWM_RT1 |= PWM_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/PWM.c **** 
 115:.\Generated_Source\PSoC4/PWM.c ****     #elif (PWM_UseControl)
 116:.\Generated_Source\PSoC4/PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/PWM.c ****         ctrl = PWM_CONTROL & ((uint8)(~PWM_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC4/PWM.c ****                 ((uint8)(~PWM_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL = ctrl | PWM_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC4/PWM.c ****                                    PWM_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/PWM.c **** 
 123:.\Generated_Source\PSoC4/PWM.c ****     #if (!PWM_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_Resolution == 8)
 125:.\Generated_Source\PSoC4/PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC4/PWM.c ****         #else /* (PWM_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP0 |= (PWM_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP1 |= (PWM_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_Resolution == 8) */
 132:.\Generated_Source\PSoC4/PWM.c **** 
 133:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCounter(PWM_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/PWM.c **** 
 136:.\Generated_Source\PSoC4/PWM.c ****     PWM_WritePeriod(PWM_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC4/PWM.c **** 
 138:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC4/PWM.c ****         #else
 141:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare1(PWM_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare2(PWM_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/PWM.c **** 
 145:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_KillModeMinTime)
 146:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteKillTime(PWM_MinimumKillTime);
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 4


 147:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/PWM.c **** 
 149:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_DeadBandUsed)
 150:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteDeadTime(PWM_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/PWM.c **** 
 153:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseStatus || PWM_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/PWM.c **** 
 157:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE |= PWM_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/PWM.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL2 |= PWM_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/PWM.c ****     #else
 163:.\Generated_Source\PSoC4/PWM.c ****         #if(PWM_UseStatus)
 164:.\Generated_Source\PSoC4/PWM.c **** 
 165:.\Generated_Source\PSoC4/PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/PWM.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/PWM.c ****             PWM_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC4/PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/PWM.c ****             PWM_STATUS_AUX_CTRL |= PWM_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC4/PWM.c **** 
 171:.\Generated_Source\PSoC4/PWM.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/PWM.c ****             CyExitCriticalSection(PWM_interruptState);
 173:.\Generated_Source\PSoC4/PWM.c **** 
 174:.\Generated_Source\PSoC4/PWM.c ****             /* Clear the FIFO to enable the PWM_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/PWM.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/PWM.c ****             PWM_ClearFIFO();
 177:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
 178:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/PWM.c **** }
 180:.\Generated_Source\PSoC4/PWM.c **** 
 181:.\Generated_Source\PSoC4/PWM.c **** 
 182:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 184:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/PWM.c **** *
 186:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 187:.\Generated_Source\PSoC4/PWM.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/PWM.c **** *
 189:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 190:.\Generated_Source\PSoC4/PWM.c **** *  None
 191:.\Generated_Source\PSoC4/PWM.c **** *
 192:.\Generated_Source\PSoC4/PWM.c **** * Return:
 193:.\Generated_Source\PSoC4/PWM.c **** *  None
 194:.\Generated_Source\PSoC4/PWM.c **** *
 195:.\Generated_Source\PSoC4/PWM.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/PWM.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/PWM.c **** *
 198:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void) 
 200:.\Generated_Source\PSoC4/PWM.c **** {
  26              		.loc 1 200 0
  27              		.cfi_startproc
 201:.\Generated_Source\PSoC4/PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 5


 202:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE |= PWM_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_STBY_ENABLE |= PWM_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/PWM.c **** 
 207:.\Generated_Source\PSoC4/PWM.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseControl || PWM_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL |= PWM_CTRL_ENABLE;
  28              		.loc 1 209 0
  29 0000 024A     		ldr	r2, .L2
  30 0002 1178     		ldrb	r1, [r2]
  31 0004 8023     		mov	r3, #128
  32 0006 0B43     		orr	r3, r1
  33 0008 1370     		strb	r3, [r2]
 210:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseControl || PWM_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/PWM.c **** }
  34              		.loc 1 211 0
  35              		@ sp needed
  36 000a 7047     		bx	lr
  37              	.L3:
  38              		.align	2
  39              	.L2:
  40 000c 72000F40 		.word	1074724978
  41              		.cfi_endproc
  42              	.LFE2:
  43              		.size	PWM_Enable, .-PWM_Enable
  44              		.section	.text.PWM_Stop,"ax",%progbits
  45              		.align	2
  46              		.global	PWM_Stop
  47              		.code	16
  48              		.thumb_func
  49              		.type	PWM_Stop, %function
  50              	PWM_Stop:
  51              	.LFB3:
 212:.\Generated_Source\PSoC4/PWM.c **** 
 213:.\Generated_Source\PSoC4/PWM.c **** 
 214:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 216:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/PWM.c **** *
 218:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 219:.\Generated_Source\PSoC4/PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/PWM.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/PWM.c **** *
 222:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 223:.\Generated_Source\PSoC4/PWM.c **** *  None
 224:.\Generated_Source\PSoC4/PWM.c **** *
 225:.\Generated_Source\PSoC4/PWM.c **** * Return:
 226:.\Generated_Source\PSoC4/PWM.c **** *  None
 227:.\Generated_Source\PSoC4/PWM.c **** *
 228:.\Generated_Source\PSoC4/PWM.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/PWM.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/PWM.c **** *
 232:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void) 
 234:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 6


  52              		.loc 1 234 0
  53              		.cfi_startproc
 235:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseControl || PWM_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL &= ((uint8)(~PWM_CTRL_ENABLE));
  54              		.loc 1 236 0
  55 0000 024A     		ldr	r2, .L5
  56 0002 1178     		ldrb	r1, [r2]
  57 0004 7F23     		mov	r3, #127
  58 0006 0B40     		and	r3, r1
  59 0008 1370     		strb	r3, [r2]
 237:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseControl || PWM_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/PWM.c **** 
 239:.\Generated_Source\PSoC4/PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_ENABLE &= ((uint8)(~PWM_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/PWM.c ****         PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/PWM.c **** }
  60              		.loc 1 244 0
  61              		@ sp needed
  62 000a 7047     		bx	lr
  63              	.L6:
  64              		.align	2
  65              	.L5:
  66 000c 72000F40 		.word	1074724978
  67              		.cfi_endproc
  68              	.LFE3:
  69              		.size	PWM_Stop, .-PWM_Stop
  70              		.section	.text.PWM_WriteCounter,"ax",%progbits
  71              		.align	2
  72              		.global	PWM_WriteCounter
  73              		.code	16
  74              		.thumb_func
  75              		.type	PWM_WriteCounter, %function
  76              	PWM_WriteCounter:
  77              	.LFB4:
 245:.\Generated_Source\PSoC4/PWM.c **** 
 246:.\Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CompareMode1SW)
 248:.\Generated_Source\PSoC4/PWM.c **** 
 249:.\Generated_Source\PSoC4/PWM.c **** 
 250:.\Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_SetCompareMode
 252:.\Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/PWM.c ****         *
 254:.\Generated_Source\PSoC4/PWM.c ****         * Summary:
 255:.\Generated_Source\PSoC4/PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/PWM.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/PWM.c ****         *
 258:.\Generated_Source\PSoC4/PWM.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/PWM.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/PWM.c ****         *
 262:.\Generated_Source\PSoC4/PWM.c ****         * Return:
 263:.\Generated_Source\PSoC4/PWM.c ****         *  None
 264:.\Generated_Source\PSoC4/PWM.c ****         *
 265:.\Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 7


 266:.\Generated_Source\PSoC4/PWM.c ****         void PWM_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/PWM.c ****         {
 268:.\Generated_Source\PSoC4/PWM.c ****             #if(PWM_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/PWM.c **** 
 270:.\Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHIF
 272:.\Generated_Source\PSoC4/PWM.c ****                 #else
 273:.\Generated_Source\PSoC4/PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/PWM.c **** 
 276:.\Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL3 &= ((uint8)(~PWM_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/PWM.c **** 
 279:.\Generated_Source\PSoC4/PWM.c ****             #elif (PWM_UseControl)
 280:.\Generated_Source\PSoC4/PWM.c **** 
 281:.\Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHI
 283:.\Generated_Source\PSoC4/PWM.c ****                                                 PWM_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/PWM.c ****                 #else
 285:.\Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode1masked = comparemode & PWM_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/PWM.c **** 
 288:.\Generated_Source\PSoC4/PWM.c ****                 #if(0 != PWM_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE2_SHI
 290:.\Generated_Source\PSoC4/PWM.c ****                                                PWM_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/PWM.c ****                 #else
 292:.\Generated_Source\PSoC4/PWM.c ****                     uint8 comparemode2masked = comparemode & PWM_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/PWM.c ****                 #endif /* (0 != PWM_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/PWM.c **** 
 295:.\Generated_Source\PSoC4/PWM.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL &= ((uint8)(~(PWM_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/PWM.c ****                                             PWM_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/PWM.c **** 
 300:.\Generated_Source\PSoC4/PWM.c ****             #else
 301:.\Generated_Source\PSoC4/PWM.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/PWM.c ****         }
 304:.\Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_CompareMode1SW */
 305:.\Generated_Source\PSoC4/PWM.c **** 
 306:.\Generated_Source\PSoC4/PWM.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/PWM.c **** 
 308:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CompareMode1SW)
 309:.\Generated_Source\PSoC4/PWM.c **** 
 310:.\Generated_Source\PSoC4/PWM.c **** 
 311:.\Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_SetCompareMode1
 313:.\Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/PWM.c ****         *
 315:.\Generated_Source\PSoC4/PWM.c ****         * Summary:
 316:.\Generated_Source\PSoC4/PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/PWM.c ****         *
 318:.\Generated_Source\PSoC4/PWM.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/PWM.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/PWM.c ****         *
 322:.\Generated_Source\PSoC4/PWM.c ****         * Return:
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 8


 323:.\Generated_Source\PSoC4/PWM.c ****         *  None
 324:.\Generated_Source\PSoC4/PWM.c ****         *
 325:.\Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/PWM.c ****         void PWM_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/PWM.c ****         {
 328:.\Generated_Source\PSoC4/PWM.c ****             #if(0 != PWM_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE1_SHIFT)) 
 330:.\Generated_Source\PSoC4/PWM.c ****                                            PWM_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/PWM.c ****             #else
 332:.\Generated_Source\PSoC4/PWM.c ****                 uint8 comparemodemasked = comparemode & PWM_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/PWM.c ****             #endif /* (0 != PWM_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/PWM.c **** 
 335:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM_UseControl)
 336:.\Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL &= ((uint8)(~PWM_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC4/PWM.c ****                 PWM_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UseControl) */
 339:.\Generated_Source\PSoC4/PWM.c ****         }
 340:.\Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_CompareMode1SW */
 341:.\Generated_Source\PSoC4/PWM.c **** 
 342:.\Generated_Source\PSoC4/PWM.c **** #if (PWM_CompareMode2SW)
 343:.\Generated_Source\PSoC4/PWM.c **** 
 344:.\Generated_Source\PSoC4/PWM.c **** 
 345:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_SetCompareMode2
 347:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/PWM.c ****     *
 349:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 350:.\Generated_Source\PSoC4/PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/PWM.c ****     *
 352:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/PWM.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/PWM.c ****     *
 356:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 357:.\Generated_Source\PSoC4/PWM.c ****     *  None
 358:.\Generated_Source\PSoC4/PWM.c ****     *
 359:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/PWM.c ****     void PWM_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/PWM.c ****     {
 362:.\Generated_Source\PSoC4/PWM.c **** 
 363:.\Generated_Source\PSoC4/PWM.c ****         #if(0 != PWM_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC4/PWM.c ****                                                  PWM_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/PWM.c ****         #else
 367:.\Generated_Source\PSoC4/PWM.c ****             uint8 comparemodemasked = comparemode & PWM_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0 != PWM_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/PWM.c **** 
 370:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_UseControl)
 371:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL &= ((uint8)(~PWM_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseControl) */
 374:.\Generated_Source\PSoC4/PWM.c ****     }
 375:.\Generated_Source\PSoC4/PWM.c ****     #endif /*PWM_CompareMode2SW */
 376:.\Generated_Source\PSoC4/PWM.c **** 
 377:.\Generated_Source\PSoC4/PWM.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/PWM.c **** 
 379:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 9


 380:.\Generated_Source\PSoC4/PWM.c **** #if (!PWM_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/PWM.c **** 
 382:.\Generated_Source\PSoC4/PWM.c **** 
 383:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCounter
 385:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/PWM.c ****     *
 387:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 388:.\Generated_Source\PSoC4/PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/PWM.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/PWM.c ****     *
 393:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/PWM.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/PWM.c ****     *
 396:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 397:.\Generated_Source\PSoC4/PWM.c ****     *  None
 398:.\Generated_Source\PSoC4/PWM.c ****     *
 399:.\Generated_Source\PSoC4/PWM.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/PWM.c ****     *
 402:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC4/PWM.c ****                                        
 405:.\Generated_Source\PSoC4/PWM.c ****     {
  78              		.loc 1 405 0
  79              		.cfi_startproc
  80              	.LVL0:
 406:.\Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_COUNTER_LSB_PTR, counter);
  81              		.loc 1 406 0
  82 0000 014B     		ldr	r3, .L8
  83 0002 1880     		strh	r0, [r3]
 407:.\Generated_Source\PSoC4/PWM.c ****     }
  84              		.loc 1 407 0
  85              		@ sp needed
  86 0004 7047     		bx	lr
  87              	.L9:
  88 0006 C046     		.align	2
  89              	.L8:
  90 0008 04100F40 		.word	1074728964
  91              		.cfi_endproc
  92              	.LFE4:
  93              		.size	PWM_WriteCounter, .-PWM_WriteCounter
  94              		.section	.text.PWM_ReadCounter,"ax",%progbits
  95              		.align	2
  96              		.global	PWM_ReadCounter
  97              		.code	16
  98              		.thumb_func
  99              		.type	PWM_ReadCounter, %function
 100              	PWM_ReadCounter:
 101              	.LFB5:
 408:.\Generated_Source\PSoC4/PWM.c **** 
 409:.\Generated_Source\PSoC4/PWM.c **** 
 410:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCounter
 412:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 10


 413:.\Generated_Source\PSoC4/PWM.c ****     *
 414:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 415:.\Generated_Source\PSoC4/PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/PWM.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/PWM.c ****     *
 418:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/PWM.c ****     *  None
 420:.\Generated_Source\PSoC4/PWM.c ****     *
 421:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 422:.\Generated_Source\PSoC4/PWM.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/PWM.c ****     *
 424:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/PWM.c ****     {
 102              		.loc 1 426 0
 103              		.cfi_startproc
 427:.\Generated_Source\PSoC4/PWM.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/PWM.c ****           (void)CY_GET_REG8(PWM_COUNTERCAP_LSB_PTR_8BIT);
 104              		.loc 1 430 0
 105 0000 024B     		ldr	r3, .L11
 106 0002 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/PWM.c **** 
 432:.\Generated_Source\PSoC4/PWM.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_CAPTURE_LSB_PTR));
 107              		.loc 1 433 0
 108 0004 024B     		ldr	r3, .L11+4
 109 0006 1888     		ldrh	r0, [r3]
 110 0008 80B2     		uxth	r0, r0
 434:.\Generated_Source\PSoC4/PWM.c ****     }
 111              		.loc 1 434 0
 112              		@ sp needed
 113 000a 7047     		bx	lr
 114              	.L12:
 115              		.align	2
 116              	.L11:
 117 000c 12000F40 		.word	1074724882
 118 0010 A4100F40 		.word	1074729124
 119              		.cfi_endproc
 120              	.LFE5:
 121              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 122              		.section	.text.PWM_WritePeriod,"ax",%progbits
 123              		.align	2
 124              		.global	PWM_WritePeriod
 125              		.code	16
 126              		.thumb_func
 127              		.type	PWM_WritePeriod, %function
 128              	PWM_WritePeriod:
 129              	.LFB7:
 435:.\Generated_Source\PSoC4/PWM.c **** 
 436:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UseStatus)
 437:.\Generated_Source\PSoC4/PWM.c **** 
 438:.\Generated_Source\PSoC4/PWM.c **** 
 439:.\Generated_Source\PSoC4/PWM.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/PWM.c ****         * Function Name: PWM_ClearFIFO
 441:.\Generated_Source\PSoC4/PWM.c ****         ********************************************************************************
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 11


 442:.\Generated_Source\PSoC4/PWM.c ****         *
 443:.\Generated_Source\PSoC4/PWM.c ****         * Summary:
 444:.\Generated_Source\PSoC4/PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/PWM.c ****         *
 446:.\Generated_Source\PSoC4/PWM.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/PWM.c ****         *  None
 448:.\Generated_Source\PSoC4/PWM.c ****         *
 449:.\Generated_Source\PSoC4/PWM.c ****         * Return:
 450:.\Generated_Source\PSoC4/PWM.c ****         *  None
 451:.\Generated_Source\PSoC4/PWM.c ****         *
 452:.\Generated_Source\PSoC4/PWM.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/PWM.c ****         void PWM_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/PWM.c ****         {
 455:.\Generated_Source\PSoC4/PWM.c ****             while(0u != (PWM_ReadStatusRegister() & PWM_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC4/PWM.c ****             {
 457:.\Generated_Source\PSoC4/PWM.c ****                 (void)PWM_ReadCapture();
 458:.\Generated_Source\PSoC4/PWM.c ****             }
 459:.\Generated_Source\PSoC4/PWM.c ****         }
 460:.\Generated_Source\PSoC4/PWM.c **** 
 461:.\Generated_Source\PSoC4/PWM.c ****     #endif /* PWM_UseStatus */
 462:.\Generated_Source\PSoC4/PWM.c **** 
 463:.\Generated_Source\PSoC4/PWM.c **** #endif /* !PWM_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/PWM.c **** 
 465:.\Generated_Source\PSoC4/PWM.c **** 
 466:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 468:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/PWM.c **** *
 470:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 471:.\Generated_Source\PSoC4/PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/PWM.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/PWM.c **** *
 474:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 475:.\Generated_Source\PSoC4/PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/PWM.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/PWM.c **** *
 478:.\Generated_Source\PSoC4/PWM.c **** * Return:
 479:.\Generated_Source\PSoC4/PWM.c **** *  None
 480:.\Generated_Source\PSoC4/PWM.c **** *
 481:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC4/PWM.c **** {
 130              		.loc 1 483 0
 131              		.cfi_startproc
 132              	.LVL1:
 484:.\Generated_Source\PSoC4/PWM.c ****     #if(PWM_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/PWM.c ****     #else
 487:.\Generated_Source\PSoC4/PWM.c ****         CY_SET_REG16(PWM_PERIOD_LSB_PTR, period);
 133              		.loc 1 487 0
 134 0000 014B     		ldr	r3, .L14
 135 0002 1880     		strh	r0, [r3]
 488:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/PWM.c **** }
 136              		.loc 1 489 0
 137              		@ sp needed
 138 0004 7047     		bx	lr
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 12


 139              	.L15:
 140 0006 C046     		.align	2
 141              	.L14:
 142 0008 84100F40 		.word	1074729092
 143              		.cfi_endproc
 144              	.LFE7:
 145              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 146              		.section	.text.PWM_WriteCompare,"ax",%progbits
 147              		.align	2
 148              		.global	PWM_WriteCompare
 149              		.code	16
 150              		.thumb_func
 151              		.type	PWM_WriteCompare, %function
 152              	PWM_WriteCompare:
 153              	.LFB8:
 490:.\Generated_Source\PSoC4/PWM.c **** 
 491:.\Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/PWM.c **** 
 493:.\Generated_Source\PSoC4/PWM.c **** 
 494:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare
 496:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/PWM.c ****     *
 498:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 499:.\Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/PWM.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/PWM.c ****     *
 505:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/PWM.c ****     *
 508:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 509:.\Generated_Source\PSoC4/PWM.c ****     *  None
 510:.\Generated_Source\PSoC4/PWM.c ****     *
 511:.\Generated_Source\PSoC4/PWM.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/PWM.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/PWM.c ****     *
 515:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC4/PWM.c ****                                        
 518:.\Generated_Source\PSoC4/PWM.c ****     {
 154              		.loc 1 518 0
 155              		.cfi_startproc
 156              	.LVL2:
 519:.\Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/PWM.c ****         #else
 522:.\Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, compare);
 157              		.loc 1 522 0
 158 0000 014B     		ldr	r3, .L17
 159 0002 1880     		strh	r0, [r3]
 523:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/PWM.c **** 
 525:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM_PWMMode == PWM__B_PWM__DITHER)
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 13


 526:.\Generated_Source\PSoC4/PWM.c ****             #if(PWM_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/PWM.c ****                 CY_SET_REG16(PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/PWM.c ****             #else
 529:.\Generated_Source\PSoC4/PWM.c ****                 CY_SET_REG16(PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_PWMMode == PWM__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC4/PWM.c ****     }
 160              		.loc 1 532 0
 161              		@ sp needed
 162 0004 7047     		bx	lr
 163              	.L18:
 164 0006 C046     		.align	2
 165              	.L17:
 166 0008 44100F40 		.word	1074729028
 167              		.cfi_endproc
 168              	.LFE8:
 169              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 170              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 171              		.align	2
 172              		.global	PWM_SetInterruptMode
 173              		.code	16
 174              		.thumb_func
 175              		.type	PWM_SetInterruptMode, %function
 176              	PWM_SetInterruptMode:
 177              	.LFB9:
 533:.\Generated_Source\PSoC4/PWM.c **** 
 534:.\Generated_Source\PSoC4/PWM.c **** 
 535:.\Generated_Source\PSoC4/PWM.c **** #else
 536:.\Generated_Source\PSoC4/PWM.c **** 
 537:.\Generated_Source\PSoC4/PWM.c **** 
 538:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare1
 540:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/PWM.c ****     *
 542:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 543:.\Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/PWM.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/PWM.c ****     *
 548:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/PWM.c ****     *
 551:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 552:.\Generated_Source\PSoC4/PWM.c ****     *  None
 553:.\Generated_Source\PSoC4/PWM.c ****     *
 554:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC4/PWM.c ****                                         
 557:.\Generated_Source\PSoC4/PWM.c ****     {
 558:.\Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/PWM.c ****         #else
 561:.\Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/PWM.c ****     }
 564:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 14


 565:.\Generated_Source\PSoC4/PWM.c **** 
 566:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteCompare2
 568:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM.c ****     *
 570:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 571:.\Generated_Source\PSoC4/PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/PWM.c ****     *  mode.
 576:.\Generated_Source\PSoC4/PWM.c ****     *
 577:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/PWM.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/PWM.c ****     *
 580:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 581:.\Generated_Source\PSoC4/PWM.c ****     *  None
 582:.\Generated_Source\PSoC4/PWM.c ****     *
 583:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/PWM.c ****     void PWM_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC4/PWM.c ****                                         
 586:.\Generated_Source\PSoC4/PWM.c ****     {
 587:.\Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/PWM.c ****         #else
 590:.\Generated_Source\PSoC4/PWM.c ****             CY_SET_REG16(PWM_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/PWM.c ****     }
 593:.\Generated_Source\PSoC4/PWM.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/PWM.c **** 
 595:.\Generated_Source\PSoC4/PWM.c **** #if (PWM_DeadBandUsed)
 596:.\Generated_Source\PSoC4/PWM.c **** 
 597:.\Generated_Source\PSoC4/PWM.c **** 
 598:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteDeadTime
 600:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/PWM.c ****     *
 602:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 603:.\Generated_Source\PSoC4/PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/PWM.c ****     *
 605:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/PWM.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/PWM.c ****     *
 608:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 609:.\Generated_Source\PSoC4/PWM.c ****     *  None
 610:.\Generated_Source\PSoC4/PWM.c ****     *
 611:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/PWM.c ****     void PWM_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/PWM.c ****     {
 614:.\Generated_Source\PSoC4/PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/PWM.c ****         #if(!PWM_DeadBand2_4)
 616:.\Generated_Source\PSoC4/PWM.c ****             CY_SET_REG8(PWM_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/PWM.c ****         #else
 618:.\Generated_Source\PSoC4/PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/PWM.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/PWM.c ****             PWM_DEADBAND_COUNT &= ((uint8)(~PWM_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 15


 622:.\Generated_Source\PSoC4/PWM.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/PWM.c ****             #if(PWM_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/PWM.c ****                 PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_DEADBAND_COUNT_SHIFT)) &
 625:.\Generated_Source\PSoC4/PWM.c ****                                                     PWM_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/PWM.c ****             #else
 627:.\Generated_Source\PSoC4/PWM.c ****                 PWM_DEADBAND_COUNT |= deadtime & PWM_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/PWM.c **** 
 630:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (!PWM_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/PWM.c ****     }
 632:.\Generated_Source\PSoC4/PWM.c **** 
 633:.\Generated_Source\PSoC4/PWM.c **** 
 634:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadDeadTime
 636:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/PWM.c ****     *
 638:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 639:.\Generated_Source\PSoC4/PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/PWM.c ****     *
 641:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/PWM.c ****     *  None
 643:.\Generated_Source\PSoC4/PWM.c ****     *
 644:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 645:.\Generated_Source\PSoC4/PWM.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/PWM.c ****     *
 647:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/PWM.c ****     {
 650:.\Generated_Source\PSoC4/PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/PWM.c ****         #if(!PWM_DeadBand2_4)
 652:.\Generated_Source\PSoC4/PWM.c ****             return (CY_GET_REG8(PWM_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/PWM.c ****         #else
 654:.\Generated_Source\PSoC4/PWM.c **** 
 655:.\Generated_Source\PSoC4/PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/PWM.c ****             #if(PWM_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/PWM.c ****                 return ((uint8)(((uint8)(PWM_DEADBAND_COUNT & PWM_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC4/PWM.c ****                                                                            PWM_DEADBAND_COUNT_SHIFT
 659:.\Generated_Source\PSoC4/PWM.c ****             #else
 660:.\Generated_Source\PSoC4/PWM.c ****                 return (PWM_DEADBAND_COUNT & PWM_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/PWM.c ****             #endif /* (PWM_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (!PWM_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/PWM.c ****     }
 664:.\Generated_Source\PSoC4/PWM.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/PWM.c **** 
 666:.\Generated_Source\PSoC4/PWM.c **** #if (PWM_UseStatus || PWM_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/PWM.c **** 
 668:.\Generated_Source\PSoC4/PWM.c **** 
 669:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_SetInterruptMode
 671:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/PWM.c ****     *
 673:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 674:.\Generated_Source\PSoC4/PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/PWM.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/PWM.c ****     *
 677:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 16


 679:.\Generated_Source\PSoC4/PWM.c ****     *
 680:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 681:.\Generated_Source\PSoC4/PWM.c ****     *  None
 682:.\Generated_Source\PSoC4/PWM.c ****     *
 683:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/PWM.c ****     void PWM_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/PWM.c ****     {
 178              		.loc 1 685 0
 179              		.cfi_startproc
 180              	.LVL3:
 686:.\Generated_Source\PSoC4/PWM.c ****         CY_SET_REG8(PWM_STATUS_MASK_PTR, interruptMode);
 181              		.loc 1 686 0
 182 0000 014B     		ldr	r3, .L20
 183 0002 1870     		strb	r0, [r3]
 687:.\Generated_Source\PSoC4/PWM.c ****     }
 184              		.loc 1 687 0
 185              		@ sp needed
 186 0004 7047     		bx	lr
 187              	.L21:
 188 0006 C046     		.align	2
 189              	.L20:
 190 0008 83000F40 		.word	1074724995
 191              		.cfi_endproc
 192              	.LFE9:
 193              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 194              		.section	.text.PWM_ReadStatusRegister,"ax",%progbits
 195              		.align	2
 196              		.global	PWM_ReadStatusRegister
 197              		.code	16
 198              		.thumb_func
 199              		.type	PWM_ReadStatusRegister, %function
 200              	PWM_ReadStatusRegister:
 201              	.LFB10:
 688:.\Generated_Source\PSoC4/PWM.c **** 
 689:.\Generated_Source\PSoC4/PWM.c **** 
 690:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadStatusRegister
 692:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/PWM.c ****     *
 694:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 695:.\Generated_Source\PSoC4/PWM.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/PWM.c ****     *
 697:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/PWM.c ****     *  None
 699:.\Generated_Source\PSoC4/PWM.c ****     *
 700:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 701:.\Generated_Source\PSoC4/PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/PWM.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/PWM.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/PWM.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/PWM.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/PWM.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/PWM.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/PWM.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/PWM.c ****     *
 710:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadStatusRegister(void) 
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 17


 712:.\Generated_Source\PSoC4/PWM.c ****     {
 202              		.loc 1 712 0
 203              		.cfi_startproc
 713:.\Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG8(PWM_STATUS_PTR));
 204              		.loc 1 713 0
 205 0000 014B     		ldr	r3, .L23
 206 0002 1878     		ldrb	r0, [r3]
 207 0004 C0B2     		uxtb	r0, r0
 714:.\Generated_Source\PSoC4/PWM.c ****     }
 208              		.loc 1 714 0
 209              		@ sp needed
 210 0006 7047     		bx	lr
 211              	.L24:
 212              		.align	2
 213              	.L23:
 214 0008 63000F40 		.word	1074724963
 215              		.cfi_endproc
 216              	.LFE10:
 217              		.size	PWM_ReadStatusRegister, .-PWM_ReadStatusRegister
 218              		.section	.text.PWM_ReadControlRegister,"ax",%progbits
 219              		.align	2
 220              		.global	PWM_ReadControlRegister
 221              		.code	16
 222              		.thumb_func
 223              		.type	PWM_ReadControlRegister, %function
 224              	PWM_ReadControlRegister:
 225              	.LFB11:
 715:.\Generated_Source\PSoC4/PWM.c **** 
 716:.\Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/PWM.c **** 
 718:.\Generated_Source\PSoC4/PWM.c **** 
 719:.\Generated_Source\PSoC4/PWM.c **** #if (PWM_UseControl)
 720:.\Generated_Source\PSoC4/PWM.c **** 
 721:.\Generated_Source\PSoC4/PWM.c **** 
 722:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadControlRegister
 724:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/PWM.c ****     *
 726:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 727:.\Generated_Source\PSoC4/PWM.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/PWM.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/PWM.c ****     *
 730:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/PWM.c ****     *  None
 732:.\Generated_Source\PSoC4/PWM.c ****     *
 733:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 734:.\Generated_Source\PSoC4/PWM.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/PWM.c ****     *
 736:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/PWM.c ****     uint8 PWM_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/PWM.c ****     {
 226              		.loc 1 738 0
 227              		.cfi_startproc
 739:.\Generated_Source\PSoC4/PWM.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/PWM.c **** 
 741:.\Generated_Source\PSoC4/PWM.c ****         result = CY_GET_REG8(PWM_CONTROL_PTR);
 228              		.loc 1 741 0
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 18


 229 0000 014B     		ldr	r3, .L26
 230 0002 1878     		ldrb	r0, [r3]
 231 0004 C0B2     		uxtb	r0, r0
 232              	.LVL4:
 742:.\Generated_Source\PSoC4/PWM.c ****         return (result);
 743:.\Generated_Source\PSoC4/PWM.c ****     }
 233              		.loc 1 743 0
 234              		@ sp needed
 235 0006 7047     		bx	lr
 236              	.L27:
 237              		.align	2
 238              	.L26:
 239 0008 72000F40 		.word	1074724978
 240              		.cfi_endproc
 241              	.LFE11:
 242              		.size	PWM_ReadControlRegister, .-PWM_ReadControlRegister
 243              		.section	.text.PWM_WriteControlRegister,"ax",%progbits
 244              		.align	2
 245              		.global	PWM_WriteControlRegister
 246              		.code	16
 247              		.thumb_func
 248              		.type	PWM_WriteControlRegister, %function
 249              	PWM_WriteControlRegister:
 250              	.LFB12:
 744:.\Generated_Source\PSoC4/PWM.c **** 
 745:.\Generated_Source\PSoC4/PWM.c **** 
 746:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_WriteControlRegister
 748:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM.c ****     *
 750:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 751:.\Generated_Source\PSoC4/PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/PWM.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC4/PWM.c ****     *
 754:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/PWM.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/PWM.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/PWM.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/PWM.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/PWM.c ****     *
 761:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 762:.\Generated_Source\PSoC4/PWM.c ****     *  None
 763:.\Generated_Source\PSoC4/PWM.c ****     *
 764:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/PWM.c ****     void PWM_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/PWM.c ****     {
 251              		.loc 1 766 0
 252              		.cfi_startproc
 253              	.LVL5:
 767:.\Generated_Source\PSoC4/PWM.c ****         CY_SET_REG8(PWM_CONTROL_PTR, control);
 254              		.loc 1 767 0
 255 0000 014B     		ldr	r3, .L29
 256 0002 1870     		strb	r0, [r3]
 768:.\Generated_Source\PSoC4/PWM.c ****     }
 257              		.loc 1 768 0
 258              		@ sp needed
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 19


 259 0004 7047     		bx	lr
 260              	.L30:
 261 0006 C046     		.align	2
 262              	.L29:
 263 0008 72000F40 		.word	1074724978
 264              		.cfi_endproc
 265              	.LFE12:
 266              		.size	PWM_WriteControlRegister, .-PWM_WriteControlRegister
 267              		.section	.text.PWM_ReadCapture,"ax",%progbits
 268              		.align	2
 269              		.global	PWM_ReadCapture
 270              		.code	16
 271              		.thumb_func
 272              		.type	PWM_ReadCapture, %function
 273              	PWM_ReadCapture:
 274              	.LFB13:
 769:.\Generated_Source\PSoC4/PWM.c **** 
 770:.\Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseControl) */
 771:.\Generated_Source\PSoC4/PWM.c **** 
 772:.\Generated_Source\PSoC4/PWM.c **** 
 773:.\Generated_Source\PSoC4/PWM.c **** #if (!PWM_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/PWM.c **** 
 775:.\Generated_Source\PSoC4/PWM.c **** 
 776:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCapture
 778:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/PWM.c ****     *
 780:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 781:.\Generated_Source\PSoC4/PWM.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/PWM.c ****     *
 783:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/PWM.c ****     *  None
 785:.\Generated_Source\PSoC4/PWM.c ****     *
 786:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 787:.\Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/PWM.c ****     *
 789:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/PWM.c ****     {
 275              		.loc 1 791 0
 276              		.cfi_startproc
 792:.\Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_CAPTURE_LSB_PTR));
 277              		.loc 1 792 0
 278 0000 014B     		ldr	r3, .L32
 279 0002 1888     		ldrh	r0, [r3]
 280 0004 80B2     		uxth	r0, r0
 793:.\Generated_Source\PSoC4/PWM.c ****     }
 281              		.loc 1 793 0
 282              		@ sp needed
 283 0006 7047     		bx	lr
 284              	.L33:
 285              		.align	2
 286              	.L32:
 287 0008 A4100F40 		.word	1074729124
 288              		.cfi_endproc
 289              	.LFE13:
 290              		.size	PWM_ReadCapture, .-PWM_ReadCapture
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 20


 291              		.section	.text.PWM_ClearFIFO,"ax",%progbits
 292              		.align	2
 293              		.global	PWM_ClearFIFO
 294              		.code	16
 295              		.thumb_func
 296              		.type	PWM_ClearFIFO, %function
 297              	PWM_ClearFIFO:
 298              	.LFB6:
 454:.\Generated_Source\PSoC4/PWM.c ****             while(0u != (PWM_ReadStatusRegister() & PWM_STATUS_FIFONEMPTY))
 299              		.loc 1 454 0
 300              		.cfi_startproc
 301 0000 08B5     		push	{r3, lr}
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 455:.\Generated_Source\PSoC4/PWM.c ****             {
 305              		.loc 1 455 0
 306 0002 01E0     		b	.L35
 307              	.L36:
 457:.\Generated_Source\PSoC4/PWM.c ****             }
 308              		.loc 1 457 0
 309 0004 FFF7FEFF 		bl	PWM_ReadCapture
 310              	.LVL6:
 311              	.L35:
 455:.\Generated_Source\PSoC4/PWM.c ****             {
 312              		.loc 1 455 0
 313 0008 FFF7FEFF 		bl	PWM_ReadStatusRegister
 314              	.LVL7:
 315 000c C306     		lsl	r3, r0, #27
 316 000e F9D4     		bmi	.L36
 459:.\Generated_Source\PSoC4/PWM.c **** 
 317              		.loc 1 459 0
 318              		@ sp needed
 319 0010 08BD     		pop	{r3, pc}
 320              		.cfi_endproc
 321              	.LFE6:
 322              		.size	PWM_ClearFIFO, .-PWM_ClearFIFO
 323 0012 C046     		.section	.text.PWM_Init,"ax",%progbits
 324              		.align	2
 325              		.global	PWM_Init
 326              		.code	16
 327              		.thumb_func
 328              		.type	PWM_Init, %function
 329              	PWM_Init:
 330              	.LFB1:
  85:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_UsingFixedFunction || PWM_UseControl)
 331              		.loc 1 85 0
 332              		.cfi_startproc
 333 0000 10B5     		push	{r4, lr}
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 4, -8
 336              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC4/PWM.c ****                 ((uint8)(~PWM_CTRL_CMPMODE1_MASK));
 337              		.loc 1 117 0
 338 0002 1449     		ldr	r1, .L38
 339 0004 0B78     		ldrb	r3, [r1]
 340 0006 3F22     		mov	r2, #63
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 21


 341 0008 9343     		bic	r3, r2
 342              	.LVL8:
 119:.\Generated_Source\PSoC4/PWM.c ****                                    PWM_DEFAULT_COMPARE1_MODE;
 343              		.loc 1 119 0
 344 000a 363A     		sub	r2, r2, #54
 345 000c 1343     		orr	r3, r2
 346              	.LVL9:
 347 000e 0B70     		strb	r3, [r1]
 129:.\Generated_Source\PSoC4/PWM.c ****             PWM_AUX_CONTROLDP1 |= (PWM_AUX_CTRL_FIFO0_CLR);
 348              		.loc 1 129 0
 349 0010 1149     		ldr	r1, .L38+4
 350 0012 0A78     		ldrb	r2, [r1]
 351 0014 0123     		mov	r3, #1
 352 0016 1A43     		orr	r2, r3
 353 0018 D2B2     		uxtb	r2, r2
 354 001a 0A70     		strb	r2, [r1]
 130:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_Resolution == 8) */
 355              		.loc 1 130 0
 356 001c 0F4C     		ldr	r4, .L38+8
 357 001e 2278     		ldrb	r2, [r4]
 358 0020 1343     		orr	r3, r2
 359 0022 DBB2     		uxtb	r3, r3
 360 0024 2370     		strb	r3, [r4]
 133:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (!PWM_UsingFixedFunction) */
 361              		.loc 1 133 0
 362 0026 1E20     		mov	r0, #30
 363 0028 FFF7FEFF 		bl	PWM_WriteCounter
 364              	.LVL10:
 136:.\Generated_Source\PSoC4/PWM.c **** 
 365              		.loc 1 136 0
 366 002c 1E20     		mov	r0, #30
 367 002e FFF7FEFF 		bl	PWM_WritePeriod
 368              	.LVL11:
 139:.\Generated_Source\PSoC4/PWM.c ****         #else
 369              		.loc 1 139 0
 370 0032 1420     		mov	r0, #20
 371 0034 FFF7FEFF 		bl	PWM_WriteCompare
 372              	.LVL12:
 154:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UseStatus || PWM_UsingFixedFunction) */
 373              		.loc 1 154 0
 374 0038 0020     		mov	r0, #0
 375 003a FFF7FEFF 		bl	PWM_SetInterruptMode
 376              	.LVL13:
 167:.\Generated_Source\PSoC4/PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 377              		.loc 1 167 0
 378 003e FFF7FEFF 		bl	CyEnterCriticalSection
 379              	.LVL14:
 169:.\Generated_Source\PSoC4/PWM.c **** 
 380              		.loc 1 169 0
 381 0042 2278     		ldrb	r2, [r4]
 382 0044 1023     		mov	r3, #16
 383 0046 1343     		orr	r3, r2
 384 0048 2370     		strb	r3, [r4]
 172:.\Generated_Source\PSoC4/PWM.c **** 
 385              		.loc 1 172 0
 386 004a FFF7FEFF 		bl	CyExitCriticalSection
 387              	.LVL15:
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 22


 176:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UseStatus) */
 388              		.loc 1 176 0
 389 004e FFF7FEFF 		bl	PWM_ClearFIFO
 390              	.LVL16:
 179:.\Generated_Source\PSoC4/PWM.c **** 
 391              		.loc 1 179 0
 392              		@ sp needed
 393 0052 10BD     		pop	{r4, pc}
 394              	.L39:
 395              		.align	2
 396              	.L38:
 397 0054 72000F40 		.word	1074724978
 398 0058 92000F40 		.word	1074725010
 399 005c 93000F40 		.word	1074725011
 400              		.cfi_endproc
 401              	.LFE1:
 402              		.size	PWM_Init, .-PWM_Init
 403              		.section	.text.PWM_Start,"ax",%progbits
 404              		.align	2
 405              		.global	PWM_Start
 406              		.code	16
 407              		.thumb_func
 408              		.type	PWM_Start, %function
 409              	PWM_Start:
 410              	.LFB0:
  56:.\Generated_Source\PSoC4/PWM.c ****     /* If not Initialized then initialize all required hardware and software */
 411              		.loc 1 56 0
 412              		.cfi_startproc
 413 0000 08B5     		push	{r3, lr}
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 3, -8
 416              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC4/PWM.c ****     {
 417              		.loc 1 58 0
 418 0002 064B     		ldr	r3, .L42
 419 0004 1B78     		ldrb	r3, [r3]
 420 0006 002B     		cmp	r3, #0
 421 0008 04D1     		bne	.L41
  60:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 422              		.loc 1 60 0
 423 000a FFF7FEFF 		bl	PWM_Init
 424              	.LVL17:
  61:.\Generated_Source\PSoC4/PWM.c ****     }
 425              		.loc 1 61 0
 426 000e 0122     		mov	r2, #1
 427 0010 024B     		ldr	r3, .L42
 428 0012 1A70     		strb	r2, [r3]
 429              	.L41:
  63:.\Generated_Source\PSoC4/PWM.c **** 
 430              		.loc 1 63 0
 431 0014 FFF7FEFF 		bl	PWM_Enable
 432              	.LVL18:
  65:.\Generated_Source\PSoC4/PWM.c **** 
 433              		.loc 1 65 0
 434              		@ sp needed
 435 0018 08BD     		pop	{r3, pc}
 436              	.L43:
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 23


 437 001a C046     		.align	2
 438              	.L42:
 439 001c 00000000 		.word	.LANCHOR0
 440              		.cfi_endproc
 441              	.LFE0:
 442              		.size	PWM_Start, .-PWM_Start
 443              		.section	.text.PWM_ReadCompare,"ax",%progbits
 444              		.align	2
 445              		.global	PWM_ReadCompare
 446              		.code	16
 447              		.thumb_func
 448              		.type	PWM_ReadCompare, %function
 449              	PWM_ReadCompare:
 450              	.LFB14:
 794:.\Generated_Source\PSoC4/PWM.c **** 
 795:.\Generated_Source\PSoC4/PWM.c **** #endif /* (!PWM_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/PWM.c **** 
 797:.\Generated_Source\PSoC4/PWM.c **** 
 798:.\Generated_Source\PSoC4/PWM.c **** #if (PWM_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/PWM.c **** 
 800:.\Generated_Source\PSoC4/PWM.c **** 
 801:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare
 803:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/PWM.c ****     *
 805:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 806:.\Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/PWM.c ****     *
 809:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/PWM.c ****     *  None
 811:.\Generated_Source\PSoC4/PWM.c ****     *
 812:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 813:.\Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/PWM.c ****     *
 815:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/PWM.c ****     {
 451              		.loc 1 817 0
 452              		.cfi_startproc
 818:.\Generated_Source\PSoC4/PWM.c ****         #if(PWM_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/PWM.c ****             return ((uint16)CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/PWM.c ****         #else
 821:.\Generated_Source\PSoC4/PWM.c ****             return (CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 453              		.loc 1 821 0
 454 0000 014B     		ldr	r3, .L45
 455 0002 1888     		ldrh	r0, [r3]
 456 0004 80B2     		uxth	r0, r0
 822:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (PWM_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/PWM.c ****     }
 457              		.loc 1 823 0
 458              		@ sp needed
 459 0006 7047     		bx	lr
 460              	.L46:
 461              		.align	2
 462              	.L45:
 463 0008 44100F40 		.word	1074729028
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 24


 464              		.cfi_endproc
 465              	.LFE14:
 466              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 467              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 468              		.align	2
 469              		.global	PWM_ReadPeriod
 470              		.code	16
 471              		.thumb_func
 472              		.type	PWM_ReadPeriod, %function
 473              	PWM_ReadPeriod:
 474              	.LFB15:
 824:.\Generated_Source\PSoC4/PWM.c **** 
 825:.\Generated_Source\PSoC4/PWM.c **** #else
 826:.\Generated_Source\PSoC4/PWM.c **** 
 827:.\Generated_Source\PSoC4/PWM.c **** 
 828:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare1
 830:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/PWM.c ****     *
 832:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 833:.\Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/PWM.c ****     *
 835:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/PWM.c ****     *  None
 837:.\Generated_Source\PSoC4/PWM.c ****     *
 838:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 839:.\Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/PWM.c ****     *
 841:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/PWM.c ****     {
 844:.\Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC4/PWM.c ****     }
 846:.\Generated_Source\PSoC4/PWM.c **** 
 847:.\Generated_Source\PSoC4/PWM.c **** 
 848:.\Generated_Source\PSoC4/PWM.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/PWM.c ****     * Function Name: PWM_ReadCompare2
 850:.\Generated_Source\PSoC4/PWM.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/PWM.c ****     *
 852:.\Generated_Source\PSoC4/PWM.c ****     * Summary:
 853:.\Generated_Source\PSoC4/PWM.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/PWM.c ****     *
 855:.\Generated_Source\PSoC4/PWM.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/PWM.c ****     *  None
 857:.\Generated_Source\PSoC4/PWM.c ****     *
 858:.\Generated_Source\PSoC4/PWM.c ****     * Return:
 859:.\Generated_Source\PSoC4/PWM.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/PWM.c ****     *
 861:.\Generated_Source\PSoC4/PWM.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/PWM.c ****     uint16 PWM_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/PWM.c ****     {
 864:.\Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC4/PWM.c ****     }
 866:.\Generated_Source\PSoC4/PWM.c **** 
 867:.\Generated_Source\PSoC4/PWM.c **** #endif /* (PWM_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/PWM.c **** 
 869:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 25


 870:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 872:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/PWM.c **** *
 874:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 875:.\Generated_Source\PSoC4/PWM.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/PWM.c **** *
 877:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 878:.\Generated_Source\PSoC4/PWM.c **** *  None
 879:.\Generated_Source\PSoC4/PWM.c **** *
 880:.\Generated_Source\PSoC4/PWM.c **** * Return:
 881:.\Generated_Source\PSoC4/PWM.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/PWM.c **** *
 883:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/PWM.c **** uint16 PWM_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/PWM.c **** {
 475              		.loc 1 885 0
 476              		.cfi_startproc
 886:.\Generated_Source\PSoC4/PWM.c ****     #if(PWM_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/PWM.c ****         return ((uint16)CY_GET_REG16(PWM_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/PWM.c ****     #else
 889:.\Generated_Source\PSoC4/PWM.c ****         return (CY_GET_REG16(PWM_PERIOD_LSB_PTR));
 477              		.loc 1 889 0
 478 0000 014B     		ldr	r3, .L48
 479 0002 1888     		ldrh	r0, [r3]
 480 0004 80B2     		uxth	r0, r0
 890:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/PWM.c **** }
 481              		.loc 1 891 0
 482              		@ sp needed
 483 0006 7047     		bx	lr
 484              	.L49:
 485              		.align	2
 486              	.L48:
 487 0008 84100F40 		.word	1074729092
 488              		.cfi_endproc
 489              	.LFE15:
 490              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 491              		.global	PWM_initVar
 492              		.bss
 493              		.set	.LANCHOR0,. + 0
 494              		.type	PWM_initVar, %object
 495              		.size	PWM_initVar, 1
 496              	PWM_initVar:
 497 0000 00       		.space	1
 498              		.text
 499              	.Letext0:
 500              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 501              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 502              		.section	.debug_info,"",%progbits
 503              	.Ldebug_info0:
 504 0000 45030000 		.4byte	0x345
 505 0004 0400     		.2byte	0x4
 506 0006 00000000 		.4byte	.Ldebug_abbrev0
 507 000a 04       		.byte	0x4
 508 000b 01       		.uleb128 0x1
 509 000c 79010000 		.4byte	.LASF40
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 26


 510 0010 01       		.byte	0x1
 511 0011 61000000 		.4byte	.LASF41
 512 0015 8B020000 		.4byte	.LASF42
 513 0019 00000000 		.4byte	.Ldebug_ranges0+0
 514 001d 00000000 		.4byte	0
 515 0021 00000000 		.4byte	.Ldebug_line0
 516 0025 02       		.uleb128 0x2
 517 0026 01       		.byte	0x1
 518 0027 06       		.byte	0x6
 519 0028 E5020000 		.4byte	.LASF0
 520 002c 02       		.uleb128 0x2
 521 002d 01       		.byte	0x1
 522 002e 08       		.byte	0x8
 523 002f A5000000 		.4byte	.LASF1
 524 0033 02       		.uleb128 0x2
 525 0034 02       		.byte	0x2
 526 0035 05       		.byte	0x5
 527 0036 67020000 		.4byte	.LASF2
 528 003a 02       		.uleb128 0x2
 529 003b 02       		.byte	0x2
 530 003c 07       		.byte	0x7
 531 003d 3E000000 		.4byte	.LASF3
 532 0041 02       		.uleb128 0x2
 533 0042 04       		.byte	0x4
 534 0043 05       		.byte	0x5
 535 0044 BF020000 		.4byte	.LASF4
 536 0048 02       		.uleb128 0x2
 537 0049 04       		.byte	0x4
 538 004a 07       		.byte	0x7
 539 004b B8000000 		.4byte	.LASF5
 540 004f 02       		.uleb128 0x2
 541 0050 08       		.byte	0x8
 542 0051 05       		.byte	0x5
 543 0052 10020000 		.4byte	.LASF6
 544 0056 02       		.uleb128 0x2
 545 0057 08       		.byte	0x8
 546 0058 07       		.byte	0x7
 547 0059 8E000000 		.4byte	.LASF7
 548 005d 03       		.uleb128 0x3
 549 005e 04       		.byte	0x4
 550 005f 05       		.byte	0x5
 551 0060 696E7400 		.ascii	"int\000"
 552 0064 02       		.uleb128 0x2
 553 0065 04       		.byte	0x4
 554 0066 07       		.byte	0x7
 555 0067 2A010000 		.4byte	.LASF8
 556 006b 04       		.uleb128 0x4
 557 006c DA000000 		.4byte	.LASF9
 558 0070 02       		.byte	0x2
 559 0071 9801     		.2byte	0x198
 560 0073 2C000000 		.4byte	0x2c
 561 0077 04       		.uleb128 0x4
 562 0078 00010000 		.4byte	.LASF10
 563 007c 02       		.byte	0x2
 564 007d 9901     		.2byte	0x199
 565 007f 3A000000 		.4byte	0x3a
 566 0083 02       		.uleb128 0x2
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 27


 567 0084 04       		.byte	0x4
 568 0085 04       		.byte	0x4
 569 0086 80000000 		.4byte	.LASF11
 570 008a 02       		.uleb128 0x2
 571 008b 08       		.byte	0x8
 572 008c 04       		.byte	0x4
 573 008d E8000000 		.4byte	.LASF12
 574 0091 02       		.uleb128 0x2
 575 0092 01       		.byte	0x1
 576 0093 08       		.byte	0x8
 577 0094 C8020000 		.4byte	.LASF13
 578 0098 04       		.uleb128 0x4
 579 0099 B3000000 		.4byte	.LASF14
 580 009d 02       		.byte	0x2
 581 009e 4202     		.2byte	0x242
 582 00a0 A4000000 		.4byte	0xa4
 583 00a4 05       		.uleb128 0x5
 584 00a5 6B000000 		.4byte	0x6b
 585 00a9 04       		.uleb128 0x4
 586 00aa 00000000 		.4byte	.LASF15
 587 00ae 02       		.byte	0x2
 588 00af 4302     		.2byte	0x243
 589 00b1 B5000000 		.4byte	0xb5
 590 00b5 05       		.uleb128 0x5
 591 00b6 77000000 		.4byte	0x77
 592 00ba 02       		.uleb128 0x2
 593 00bb 04       		.byte	0x4
 594 00bc 07       		.byte	0x7
 595 00bd 07020000 		.4byte	.LASF16
 596 00c1 06       		.uleb128 0x6
 597 00c2 F9020000 		.4byte	.LASF17
 598 00c6 01       		.byte	0x1
 599 00c7 C7       		.byte	0xc7
 600 00c8 00000000 		.4byte	.LFB2
 601 00cc 10000000 		.4byte	.LFE2-.LFB2
 602 00d0 01       		.uleb128 0x1
 603 00d1 9C       		.byte	0x9c
 604 00d2 06       		.uleb128 0x6
 605 00d3 82020000 		.4byte	.LASF18
 606 00d7 01       		.byte	0x1
 607 00d8 E9       		.byte	0xe9
 608 00d9 00000000 		.4byte	.LFB3
 609 00dd 10000000 		.4byte	.LFE3-.LFB3
 610 00e1 01       		.uleb128 0x1
 611 00e2 9C       		.byte	0x9c
 612 00e3 07       		.uleb128 0x7
 613 00e4 71020000 		.4byte	.LASF19
 614 00e8 01       		.byte	0x1
 615 00e9 9301     		.2byte	0x193
 616 00eb 00000000 		.4byte	.LFB4
 617 00ef 0C000000 		.4byte	.LFE4-.LFB4
 618 00f3 01       		.uleb128 0x1
 619 00f4 9C       		.byte	0x9c
 620 00f5 08010000 		.4byte	0x108
 621 00f9 08       		.uleb128 0x8
 622 00fa 86000000 		.4byte	.LASF21
 623 00fe 01       		.byte	0x1
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 28


 624 00ff 9301     		.2byte	0x193
 625 0101 77000000 		.4byte	0x77
 626 0105 01       		.uleb128 0x1
 627 0106 50       		.byte	0x50
 628 0107 00       		.byte	0
 629 0108 09       		.uleb128 0x9
 630 0109 CA000000 		.4byte	.LASF27
 631 010d 01       		.byte	0x1
 632 010e A901     		.2byte	0x1a9
 633 0110 77000000 		.4byte	0x77
 634 0114 00000000 		.4byte	.LFB5
 635 0118 14000000 		.4byte	.LFE5-.LFB5
 636 011c 01       		.uleb128 0x1
 637 011d 9C       		.byte	0x9c
 638 011e 07       		.uleb128 0x7
 639 011f 54010000 		.4byte	.LASF20
 640 0123 01       		.byte	0x1
 641 0124 E201     		.2byte	0x1e2
 642 0126 00000000 		.4byte	.LFB7
 643 012a 0C000000 		.4byte	.LFE7-.LFB7
 644 012e 01       		.uleb128 0x1
 645 012f 9C       		.byte	0x9c
 646 0130 43010000 		.4byte	0x143
 647 0134 08       		.uleb128 0x8
 648 0135 2D000000 		.4byte	.LASF22
 649 0139 01       		.byte	0x1
 650 013a E201     		.2byte	0x1e2
 651 013c 77000000 		.4byte	0x77
 652 0140 01       		.uleb128 0x1
 653 0141 50       		.byte	0x50
 654 0142 00       		.byte	0
 655 0143 07       		.uleb128 0x7
 656 0144 EF000000 		.4byte	.LASF23
 657 0148 01       		.byte	0x1
 658 0149 0402     		.2byte	0x204
 659 014b 00000000 		.4byte	.LFB8
 660 014f 0C000000 		.4byte	.LFE8-.LFB8
 661 0153 01       		.uleb128 0x1
 662 0154 9C       		.byte	0x9c
 663 0155 68010000 		.4byte	0x168
 664 0159 08       		.uleb128 0x8
 665 015a F1020000 		.4byte	.LASF24
 666 015e 01       		.byte	0x1
 667 015f 0402     		.2byte	0x204
 668 0161 77000000 		.4byte	0x77
 669 0165 01       		.uleb128 0x1
 670 0166 50       		.byte	0x50
 671 0167 00       		.byte	0
 672 0168 07       		.uleb128 0x7
 673 0169 64010000 		.4byte	.LASF25
 674 016d 01       		.byte	0x1
 675 016e AC02     		.2byte	0x2ac
 676 0170 00000000 		.4byte	.LFB9
 677 0174 0C000000 		.4byte	.LFE9-.LFB9
 678 0178 01       		.uleb128 0x1
 679 0179 9C       		.byte	0x9c
 680 017a 8D010000 		.4byte	0x18d
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 29


 681 017e 08       		.uleb128 0x8
 682 017f 1E020000 		.4byte	.LASF26
 683 0183 01       		.byte	0x1
 684 0184 AC02     		.2byte	0x2ac
 685 0186 6B000000 		.4byte	0x6b
 686 018a 01       		.uleb128 0x1
 687 018b 50       		.byte	0x50
 688 018c 00       		.byte	0
 689 018d 09       		.uleb128 0x9
 690 018e 04030000 		.4byte	.LASF28
 691 0192 01       		.byte	0x1
 692 0193 C702     		.2byte	0x2c7
 693 0195 6B000000 		.4byte	0x6b
 694 0199 00000000 		.4byte	.LFB10
 695 019d 0C000000 		.4byte	.LFE10-.LFB10
 696 01a1 01       		.uleb128 0x1
 697 01a2 9C       		.byte	0x9c
 698 01a3 0A       		.uleb128 0xa
 699 01a4 CD020000 		.4byte	.LASF43
 700 01a8 01       		.byte	0x1
 701 01a9 E102     		.2byte	0x2e1
 702 01ab 6B000000 		.4byte	0x6b
 703 01af 00000000 		.4byte	.LFB11
 704 01b3 0C000000 		.4byte	.LFE11-.LFB11
 705 01b7 01       		.uleb128 0x1
 706 01b8 9C       		.byte	0x9c
 707 01b9 CC010000 		.4byte	0x1cc
 708 01bd 0B       		.uleb128 0xb
 709 01be 4D010000 		.4byte	.LASF34
 710 01c2 01       		.byte	0x1
 711 01c3 E302     		.2byte	0x2e3
 712 01c5 6B000000 		.4byte	0x6b
 713 01c9 01       		.uleb128 0x1
 714 01ca 50       		.byte	0x50
 715 01cb 00       		.byte	0
 716 01cc 07       		.uleb128 0x7
 717 01cd 2C020000 		.4byte	.LASF29
 718 01d1 01       		.byte	0x1
 719 01d2 FD02     		.2byte	0x2fd
 720 01d4 00000000 		.4byte	.LFB12
 721 01d8 0C000000 		.4byte	.LFE12-.LFB12
 722 01dc 01       		.uleb128 0x1
 723 01dd 9C       		.byte	0x9c
 724 01de F1010000 		.4byte	0x1f1
 725 01e2 08       		.uleb128 0x8
 726 01e3 E0000000 		.4byte	.LASF30
 727 01e7 01       		.byte	0x1
 728 01e8 FD02     		.2byte	0x2fd
 729 01ea 6B000000 		.4byte	0x6b
 730 01ee 01       		.uleb128 0x1
 731 01ef 50       		.byte	0x50
 732 01f0 00       		.byte	0
 733 01f1 09       		.uleb128 0x9
 734 01f2 51000000 		.4byte	.LASF31
 735 01f6 01       		.byte	0x1
 736 01f7 1603     		.2byte	0x316
 737 01f9 77000000 		.4byte	0x77
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 30


 738 01fd 00000000 		.4byte	.LFB13
 739 0201 0C000000 		.4byte	.LFE13-.LFB13
 740 0205 01       		.uleb128 0x1
 741 0206 9C       		.byte	0x9c
 742 0207 07       		.uleb128 0x7
 743 0208 1F000000 		.4byte	.LASF32
 744 020c 01       		.byte	0x1
 745 020d C501     		.2byte	0x1c5
 746 020f 00000000 		.4byte	.LFB6
 747 0213 12000000 		.4byte	.LFE6-.LFB6
 748 0217 01       		.uleb128 0x1
 749 0218 9C       		.byte	0x9c
 750 0219 30020000 		.4byte	0x230
 751 021d 0C       		.uleb128 0xc
 752 021e 08000000 		.4byte	.LVL6
 753 0222 F1010000 		.4byte	0x1f1
 754 0226 0C       		.uleb128 0xc
 755 0227 0C000000 		.4byte	.LVL7
 756 022b 8D010000 		.4byte	0x18d
 757 022f 00       		.byte	0
 758 0230 0D       		.uleb128 0xd
 759 0231 16000000 		.4byte	.LASF33
 760 0235 01       		.byte	0x1
 761 0236 54       		.byte	0x54
 762 0237 00000000 		.4byte	.LFB1
 763 023b 60000000 		.4byte	.LFE1-.LFB1
 764 023f 01       		.uleb128 0x1
 765 0240 9C       		.byte	0x9c
 766 0241 CB020000 		.4byte	0x2cb
 767 0245 0E       		.uleb128 0xe
 768 0246 1B030000 		.4byte	.LASF35
 769 024a 01       		.byte	0x1
 770 024b 57       		.byte	0x57
 771 024c 6B000000 		.4byte	0x6b
 772 0250 00000000 		.4byte	.LLST0
 773 0254 0E       		.uleb128 0xe
 774 0255 45020000 		.4byte	.LASF36
 775 0259 01       		.byte	0x1
 776 025a 5D       		.byte	0x5d
 777 025b 6B000000 		.4byte	0x6b
 778 025f 13000000 		.4byte	.LLST1
 779 0263 0F       		.uleb128 0xf
 780 0264 2C000000 		.4byte	.LVL10
 781 0268 E3000000 		.4byte	0xe3
 782 026c 76020000 		.4byte	0x276
 783 0270 10       		.uleb128 0x10
 784 0271 01       		.uleb128 0x1
 785 0272 50       		.byte	0x50
 786 0273 01       		.uleb128 0x1
 787 0274 4E       		.byte	0x4e
 788 0275 00       		.byte	0
 789 0276 0F       		.uleb128 0xf
 790 0277 32000000 		.4byte	.LVL11
 791 027b 1E010000 		.4byte	0x11e
 792 027f 89020000 		.4byte	0x289
 793 0283 10       		.uleb128 0x10
 794 0284 01       		.uleb128 0x1
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 31


 795 0285 50       		.byte	0x50
 796 0286 01       		.uleb128 0x1
 797 0287 4E       		.byte	0x4e
 798 0288 00       		.byte	0
 799 0289 0F       		.uleb128 0xf
 800 028a 38000000 		.4byte	.LVL12
 801 028e 43010000 		.4byte	0x143
 802 0292 9C020000 		.4byte	0x29c
 803 0296 10       		.uleb128 0x10
 804 0297 01       		.uleb128 0x1
 805 0298 50       		.byte	0x50
 806 0299 01       		.uleb128 0x1
 807 029a 44       		.byte	0x44
 808 029b 00       		.byte	0
 809 029c 0F       		.uleb128 0xf
 810 029d 3E000000 		.4byte	.LVL13
 811 02a1 68010000 		.4byte	0x168
 812 02a5 AF020000 		.4byte	0x2af
 813 02a9 10       		.uleb128 0x10
 814 02aa 01       		.uleb128 0x1
 815 02ab 50       		.byte	0x50
 816 02ac 01       		.uleb128 0x1
 817 02ad 30       		.byte	0x30
 818 02ae 00       		.byte	0
 819 02af 0C       		.uleb128 0xc
 820 02b0 42000000 		.4byte	.LVL14
 821 02b4 30030000 		.4byte	0x330
 822 02b8 0C       		.uleb128 0xc
 823 02b9 4E000000 		.4byte	.LVL15
 824 02bd 3B030000 		.4byte	0x33b
 825 02c1 0C       		.uleb128 0xc
 826 02c2 52000000 		.4byte	.LVL16
 827 02c6 07020000 		.4byte	0x207
 828 02ca 00       		.byte	0
 829 02cb 0D       		.uleb128 0xd
 830 02cc 34000000 		.4byte	.LASF37
 831 02d0 01       		.byte	0x1
 832 02d1 37       		.byte	0x37
 833 02d2 00000000 		.4byte	.LFB0
 834 02d6 20000000 		.4byte	.LFE0-.LFB0
 835 02da 01       		.uleb128 0x1
 836 02db 9C       		.byte	0x9c
 837 02dc F3020000 		.4byte	0x2f3
 838 02e0 0C       		.uleb128 0xc
 839 02e1 0E000000 		.4byte	.LVL17
 840 02e5 30020000 		.4byte	0x230
 841 02e9 0C       		.uleb128 0xc
 842 02ea 18000000 		.4byte	.LVL18
 843 02ee C1000000 		.4byte	0xc1
 844 02f2 00       		.byte	0
 845 02f3 09       		.uleb128 0x9
 846 02f4 06000000 		.4byte	.LASF38
 847 02f8 01       		.byte	0x1
 848 02f9 3003     		.2byte	0x330
 849 02fb 77000000 		.4byte	0x77
 850 02ff 00000000 		.4byte	.LFB14
 851 0303 0C000000 		.4byte	.LFE14-.LFB14
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 32


 852 0307 01       		.uleb128 0x1
 853 0308 9C       		.byte	0x9c
 854 0309 09       		.uleb128 0x9
 855 030a 58020000 		.4byte	.LASF39
 856 030e 01       		.byte	0x1
 857 030f 7403     		.2byte	0x374
 858 0311 77000000 		.4byte	0x77
 859 0315 00000000 		.4byte	.LFB15
 860 0319 0C000000 		.4byte	.LFE15-.LFB15
 861 031d 01       		.uleb128 0x1
 862 031e 9C       		.byte	0x9c
 863 031f 11       		.uleb128 0x11
 864 0320 07010000 		.4byte	.LASF44
 865 0324 01       		.byte	0x1
 866 0325 20       		.byte	0x20
 867 0326 6B000000 		.4byte	0x6b
 868 032a 05       		.uleb128 0x5
 869 032b 03       		.byte	0x3
 870 032c 00000000 		.4byte	PWM_initVar
 871 0330 12       		.uleb128 0x12
 872 0331 13010000 		.4byte	.LASF45
 873 0335 03       		.byte	0x3
 874 0336 E3       		.byte	0xe3
 875 0337 6B000000 		.4byte	0x6b
 876 033b 13       		.uleb128 0x13
 877 033c 37010000 		.4byte	.LASF46
 878 0340 03       		.byte	0x3
 879 0341 E4       		.byte	0xe4
 880 0342 14       		.uleb128 0x14
 881 0343 6B000000 		.4byte	0x6b
 882 0347 00       		.byte	0
 883 0348 00       		.byte	0
 884              		.section	.debug_abbrev,"",%progbits
 885              	.Ldebug_abbrev0:
 886 0000 01       		.uleb128 0x1
 887 0001 11       		.uleb128 0x11
 888 0002 01       		.byte	0x1
 889 0003 25       		.uleb128 0x25
 890 0004 0E       		.uleb128 0xe
 891 0005 13       		.uleb128 0x13
 892 0006 0B       		.uleb128 0xb
 893 0007 03       		.uleb128 0x3
 894 0008 0E       		.uleb128 0xe
 895 0009 1B       		.uleb128 0x1b
 896 000a 0E       		.uleb128 0xe
 897 000b 55       		.uleb128 0x55
 898 000c 17       		.uleb128 0x17
 899 000d 11       		.uleb128 0x11
 900 000e 01       		.uleb128 0x1
 901 000f 10       		.uleb128 0x10
 902 0010 17       		.uleb128 0x17
 903 0011 00       		.byte	0
 904 0012 00       		.byte	0
 905 0013 02       		.uleb128 0x2
 906 0014 24       		.uleb128 0x24
 907 0015 00       		.byte	0
 908 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 33


 909 0017 0B       		.uleb128 0xb
 910 0018 3E       		.uleb128 0x3e
 911 0019 0B       		.uleb128 0xb
 912 001a 03       		.uleb128 0x3
 913 001b 0E       		.uleb128 0xe
 914 001c 00       		.byte	0
 915 001d 00       		.byte	0
 916 001e 03       		.uleb128 0x3
 917 001f 24       		.uleb128 0x24
 918 0020 00       		.byte	0
 919 0021 0B       		.uleb128 0xb
 920 0022 0B       		.uleb128 0xb
 921 0023 3E       		.uleb128 0x3e
 922 0024 0B       		.uleb128 0xb
 923 0025 03       		.uleb128 0x3
 924 0026 08       		.uleb128 0x8
 925 0027 00       		.byte	0
 926 0028 00       		.byte	0
 927 0029 04       		.uleb128 0x4
 928 002a 16       		.uleb128 0x16
 929 002b 00       		.byte	0
 930 002c 03       		.uleb128 0x3
 931 002d 0E       		.uleb128 0xe
 932 002e 3A       		.uleb128 0x3a
 933 002f 0B       		.uleb128 0xb
 934 0030 3B       		.uleb128 0x3b
 935 0031 05       		.uleb128 0x5
 936 0032 49       		.uleb128 0x49
 937 0033 13       		.uleb128 0x13
 938 0034 00       		.byte	0
 939 0035 00       		.byte	0
 940 0036 05       		.uleb128 0x5
 941 0037 35       		.uleb128 0x35
 942 0038 00       		.byte	0
 943 0039 49       		.uleb128 0x49
 944 003a 13       		.uleb128 0x13
 945 003b 00       		.byte	0
 946 003c 00       		.byte	0
 947 003d 06       		.uleb128 0x6
 948 003e 2E       		.uleb128 0x2e
 949 003f 00       		.byte	0
 950 0040 3F       		.uleb128 0x3f
 951 0041 19       		.uleb128 0x19
 952 0042 03       		.uleb128 0x3
 953 0043 0E       		.uleb128 0xe
 954 0044 3A       		.uleb128 0x3a
 955 0045 0B       		.uleb128 0xb
 956 0046 3B       		.uleb128 0x3b
 957 0047 0B       		.uleb128 0xb
 958 0048 27       		.uleb128 0x27
 959 0049 19       		.uleb128 0x19
 960 004a 11       		.uleb128 0x11
 961 004b 01       		.uleb128 0x1
 962 004c 12       		.uleb128 0x12
 963 004d 06       		.uleb128 0x6
 964 004e 40       		.uleb128 0x40
 965 004f 18       		.uleb128 0x18
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 34


 966 0050 9742     		.uleb128 0x2117
 967 0052 19       		.uleb128 0x19
 968 0053 00       		.byte	0
 969 0054 00       		.byte	0
 970 0055 07       		.uleb128 0x7
 971 0056 2E       		.uleb128 0x2e
 972 0057 01       		.byte	0x1
 973 0058 3F       		.uleb128 0x3f
 974 0059 19       		.uleb128 0x19
 975 005a 03       		.uleb128 0x3
 976 005b 0E       		.uleb128 0xe
 977 005c 3A       		.uleb128 0x3a
 978 005d 0B       		.uleb128 0xb
 979 005e 3B       		.uleb128 0x3b
 980 005f 05       		.uleb128 0x5
 981 0060 27       		.uleb128 0x27
 982 0061 19       		.uleb128 0x19
 983 0062 11       		.uleb128 0x11
 984 0063 01       		.uleb128 0x1
 985 0064 12       		.uleb128 0x12
 986 0065 06       		.uleb128 0x6
 987 0066 40       		.uleb128 0x40
 988 0067 18       		.uleb128 0x18
 989 0068 9742     		.uleb128 0x2117
 990 006a 19       		.uleb128 0x19
 991 006b 01       		.uleb128 0x1
 992 006c 13       		.uleb128 0x13
 993 006d 00       		.byte	0
 994 006e 00       		.byte	0
 995 006f 08       		.uleb128 0x8
 996 0070 05       		.uleb128 0x5
 997 0071 00       		.byte	0
 998 0072 03       		.uleb128 0x3
 999 0073 0E       		.uleb128 0xe
 1000 0074 3A       		.uleb128 0x3a
 1001 0075 0B       		.uleb128 0xb
 1002 0076 3B       		.uleb128 0x3b
 1003 0077 05       		.uleb128 0x5
 1004 0078 49       		.uleb128 0x49
 1005 0079 13       		.uleb128 0x13
 1006 007a 02       		.uleb128 0x2
 1007 007b 18       		.uleb128 0x18
 1008 007c 00       		.byte	0
 1009 007d 00       		.byte	0
 1010 007e 09       		.uleb128 0x9
 1011 007f 2E       		.uleb128 0x2e
 1012 0080 00       		.byte	0
 1013 0081 3F       		.uleb128 0x3f
 1014 0082 19       		.uleb128 0x19
 1015 0083 03       		.uleb128 0x3
 1016 0084 0E       		.uleb128 0xe
 1017 0085 3A       		.uleb128 0x3a
 1018 0086 0B       		.uleb128 0xb
 1019 0087 3B       		.uleb128 0x3b
 1020 0088 05       		.uleb128 0x5
 1021 0089 27       		.uleb128 0x27
 1022 008a 19       		.uleb128 0x19
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 35


 1023 008b 49       		.uleb128 0x49
 1024 008c 13       		.uleb128 0x13
 1025 008d 11       		.uleb128 0x11
 1026 008e 01       		.uleb128 0x1
 1027 008f 12       		.uleb128 0x12
 1028 0090 06       		.uleb128 0x6
 1029 0091 40       		.uleb128 0x40
 1030 0092 18       		.uleb128 0x18
 1031 0093 9742     		.uleb128 0x2117
 1032 0095 19       		.uleb128 0x19
 1033 0096 00       		.byte	0
 1034 0097 00       		.byte	0
 1035 0098 0A       		.uleb128 0xa
 1036 0099 2E       		.uleb128 0x2e
 1037 009a 01       		.byte	0x1
 1038 009b 3F       		.uleb128 0x3f
 1039 009c 19       		.uleb128 0x19
 1040 009d 03       		.uleb128 0x3
 1041 009e 0E       		.uleb128 0xe
 1042 009f 3A       		.uleb128 0x3a
 1043 00a0 0B       		.uleb128 0xb
 1044 00a1 3B       		.uleb128 0x3b
 1045 00a2 05       		.uleb128 0x5
 1046 00a3 27       		.uleb128 0x27
 1047 00a4 19       		.uleb128 0x19
 1048 00a5 49       		.uleb128 0x49
 1049 00a6 13       		.uleb128 0x13
 1050 00a7 11       		.uleb128 0x11
 1051 00a8 01       		.uleb128 0x1
 1052 00a9 12       		.uleb128 0x12
 1053 00aa 06       		.uleb128 0x6
 1054 00ab 40       		.uleb128 0x40
 1055 00ac 18       		.uleb128 0x18
 1056 00ad 9742     		.uleb128 0x2117
 1057 00af 19       		.uleb128 0x19
 1058 00b0 01       		.uleb128 0x1
 1059 00b1 13       		.uleb128 0x13
 1060 00b2 00       		.byte	0
 1061 00b3 00       		.byte	0
 1062 00b4 0B       		.uleb128 0xb
 1063 00b5 34       		.uleb128 0x34
 1064 00b6 00       		.byte	0
 1065 00b7 03       		.uleb128 0x3
 1066 00b8 0E       		.uleb128 0xe
 1067 00b9 3A       		.uleb128 0x3a
 1068 00ba 0B       		.uleb128 0xb
 1069 00bb 3B       		.uleb128 0x3b
 1070 00bc 05       		.uleb128 0x5
 1071 00bd 49       		.uleb128 0x49
 1072 00be 13       		.uleb128 0x13
 1073 00bf 02       		.uleb128 0x2
 1074 00c0 18       		.uleb128 0x18
 1075 00c1 00       		.byte	0
 1076 00c2 00       		.byte	0
 1077 00c3 0C       		.uleb128 0xc
 1078 00c4 898201   		.uleb128 0x4109
 1079 00c7 00       		.byte	0
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 36


 1080 00c8 11       		.uleb128 0x11
 1081 00c9 01       		.uleb128 0x1
 1082 00ca 31       		.uleb128 0x31
 1083 00cb 13       		.uleb128 0x13
 1084 00cc 00       		.byte	0
 1085 00cd 00       		.byte	0
 1086 00ce 0D       		.uleb128 0xd
 1087 00cf 2E       		.uleb128 0x2e
 1088 00d0 01       		.byte	0x1
 1089 00d1 3F       		.uleb128 0x3f
 1090 00d2 19       		.uleb128 0x19
 1091 00d3 03       		.uleb128 0x3
 1092 00d4 0E       		.uleb128 0xe
 1093 00d5 3A       		.uleb128 0x3a
 1094 00d6 0B       		.uleb128 0xb
 1095 00d7 3B       		.uleb128 0x3b
 1096 00d8 0B       		.uleb128 0xb
 1097 00d9 27       		.uleb128 0x27
 1098 00da 19       		.uleb128 0x19
 1099 00db 11       		.uleb128 0x11
 1100 00dc 01       		.uleb128 0x1
 1101 00dd 12       		.uleb128 0x12
 1102 00de 06       		.uleb128 0x6
 1103 00df 40       		.uleb128 0x40
 1104 00e0 18       		.uleb128 0x18
 1105 00e1 9742     		.uleb128 0x2117
 1106 00e3 19       		.uleb128 0x19
 1107 00e4 01       		.uleb128 0x1
 1108 00e5 13       		.uleb128 0x13
 1109 00e6 00       		.byte	0
 1110 00e7 00       		.byte	0
 1111 00e8 0E       		.uleb128 0xe
 1112 00e9 34       		.uleb128 0x34
 1113 00ea 00       		.byte	0
 1114 00eb 03       		.uleb128 0x3
 1115 00ec 0E       		.uleb128 0xe
 1116 00ed 3A       		.uleb128 0x3a
 1117 00ee 0B       		.uleb128 0xb
 1118 00ef 3B       		.uleb128 0x3b
 1119 00f0 0B       		.uleb128 0xb
 1120 00f1 49       		.uleb128 0x49
 1121 00f2 13       		.uleb128 0x13
 1122 00f3 02       		.uleb128 0x2
 1123 00f4 17       		.uleb128 0x17
 1124 00f5 00       		.byte	0
 1125 00f6 00       		.byte	0
 1126 00f7 0F       		.uleb128 0xf
 1127 00f8 898201   		.uleb128 0x4109
 1128 00fb 01       		.byte	0x1
 1129 00fc 11       		.uleb128 0x11
 1130 00fd 01       		.uleb128 0x1
 1131 00fe 31       		.uleb128 0x31
 1132 00ff 13       		.uleb128 0x13
 1133 0100 01       		.uleb128 0x1
 1134 0101 13       		.uleb128 0x13
 1135 0102 00       		.byte	0
 1136 0103 00       		.byte	0
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 37


 1137 0104 10       		.uleb128 0x10
 1138 0105 8A8201   		.uleb128 0x410a
 1139 0108 00       		.byte	0
 1140 0109 02       		.uleb128 0x2
 1141 010a 18       		.uleb128 0x18
 1142 010b 9142     		.uleb128 0x2111
 1143 010d 18       		.uleb128 0x18
 1144 010e 00       		.byte	0
 1145 010f 00       		.byte	0
 1146 0110 11       		.uleb128 0x11
 1147 0111 34       		.uleb128 0x34
 1148 0112 00       		.byte	0
 1149 0113 03       		.uleb128 0x3
 1150 0114 0E       		.uleb128 0xe
 1151 0115 3A       		.uleb128 0x3a
 1152 0116 0B       		.uleb128 0xb
 1153 0117 3B       		.uleb128 0x3b
 1154 0118 0B       		.uleb128 0xb
 1155 0119 49       		.uleb128 0x49
 1156 011a 13       		.uleb128 0x13
 1157 011b 3F       		.uleb128 0x3f
 1158 011c 19       		.uleb128 0x19
 1159 011d 02       		.uleb128 0x2
 1160 011e 18       		.uleb128 0x18
 1161 011f 00       		.byte	0
 1162 0120 00       		.byte	0
 1163 0121 12       		.uleb128 0x12
 1164 0122 2E       		.uleb128 0x2e
 1165 0123 00       		.byte	0
 1166 0124 3F       		.uleb128 0x3f
 1167 0125 19       		.uleb128 0x19
 1168 0126 03       		.uleb128 0x3
 1169 0127 0E       		.uleb128 0xe
 1170 0128 3A       		.uleb128 0x3a
 1171 0129 0B       		.uleb128 0xb
 1172 012a 3B       		.uleb128 0x3b
 1173 012b 0B       		.uleb128 0xb
 1174 012c 27       		.uleb128 0x27
 1175 012d 19       		.uleb128 0x19
 1176 012e 49       		.uleb128 0x49
 1177 012f 13       		.uleb128 0x13
 1178 0130 3C       		.uleb128 0x3c
 1179 0131 19       		.uleb128 0x19
 1180 0132 00       		.byte	0
 1181 0133 00       		.byte	0
 1182 0134 13       		.uleb128 0x13
 1183 0135 2E       		.uleb128 0x2e
 1184 0136 01       		.byte	0x1
 1185 0137 3F       		.uleb128 0x3f
 1186 0138 19       		.uleb128 0x19
 1187 0139 03       		.uleb128 0x3
 1188 013a 0E       		.uleb128 0xe
 1189 013b 3A       		.uleb128 0x3a
 1190 013c 0B       		.uleb128 0xb
 1191 013d 3B       		.uleb128 0x3b
 1192 013e 0B       		.uleb128 0xb
 1193 013f 27       		.uleb128 0x27
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 38


 1194 0140 19       		.uleb128 0x19
 1195 0141 3C       		.uleb128 0x3c
 1196 0142 19       		.uleb128 0x19
 1197 0143 00       		.byte	0
 1198 0144 00       		.byte	0
 1199 0145 14       		.uleb128 0x14
 1200 0146 05       		.uleb128 0x5
 1201 0147 00       		.byte	0
 1202 0148 49       		.uleb128 0x49
 1203 0149 13       		.uleb128 0x13
 1204 014a 00       		.byte	0
 1205 014b 00       		.byte	0
 1206 014c 00       		.byte	0
 1207              		.section	.debug_loc,"",%progbits
 1208              	.Ldebug_loc0:
 1209              	.LLST0:
 1210 0000 0A000000 		.4byte	.LVL8
 1211 0004 0E000000 		.4byte	.LVL9
 1212 0008 0100     		.2byte	0x1
 1213 000a 53       		.byte	0x53
 1214 000b 00000000 		.4byte	0
 1215 000f 00000000 		.4byte	0
 1216              	.LLST1:
 1217 0013 42000000 		.4byte	.LVL14
 1218 0017 4D000000 		.4byte	.LVL15-1
 1219 001b 0100     		.2byte	0x1
 1220 001d 50       		.byte	0x50
 1221 001e 00000000 		.4byte	0
 1222 0022 00000000 		.4byte	0
 1223              		.section	.debug_aranges,"",%progbits
 1224 0000 94000000 		.4byte	0x94
 1225 0004 0200     		.2byte	0x2
 1226 0006 00000000 		.4byte	.Ldebug_info0
 1227 000a 04       		.byte	0x4
 1228 000b 00       		.byte	0
 1229 000c 0000     		.2byte	0
 1230 000e 0000     		.2byte	0
 1231 0010 00000000 		.4byte	.LFB2
 1232 0014 10000000 		.4byte	.LFE2-.LFB2
 1233 0018 00000000 		.4byte	.LFB3
 1234 001c 10000000 		.4byte	.LFE3-.LFB3
 1235 0020 00000000 		.4byte	.LFB4
 1236 0024 0C000000 		.4byte	.LFE4-.LFB4
 1237 0028 00000000 		.4byte	.LFB5
 1238 002c 14000000 		.4byte	.LFE5-.LFB5
 1239 0030 00000000 		.4byte	.LFB7
 1240 0034 0C000000 		.4byte	.LFE7-.LFB7
 1241 0038 00000000 		.4byte	.LFB8
 1242 003c 0C000000 		.4byte	.LFE8-.LFB8
 1243 0040 00000000 		.4byte	.LFB9
 1244 0044 0C000000 		.4byte	.LFE9-.LFB9
 1245 0048 00000000 		.4byte	.LFB10
 1246 004c 0C000000 		.4byte	.LFE10-.LFB10
 1247 0050 00000000 		.4byte	.LFB11
 1248 0054 0C000000 		.4byte	.LFE11-.LFB11
 1249 0058 00000000 		.4byte	.LFB12
 1250 005c 0C000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 39


 1251 0060 00000000 		.4byte	.LFB13
 1252 0064 0C000000 		.4byte	.LFE13-.LFB13
 1253 0068 00000000 		.4byte	.LFB6
 1254 006c 12000000 		.4byte	.LFE6-.LFB6
 1255 0070 00000000 		.4byte	.LFB1
 1256 0074 60000000 		.4byte	.LFE1-.LFB1
 1257 0078 00000000 		.4byte	.LFB0
 1258 007c 20000000 		.4byte	.LFE0-.LFB0
 1259 0080 00000000 		.4byte	.LFB14
 1260 0084 0C000000 		.4byte	.LFE14-.LFB14
 1261 0088 00000000 		.4byte	.LFB15
 1262 008c 0C000000 		.4byte	.LFE15-.LFB15
 1263 0090 00000000 		.4byte	0
 1264 0094 00000000 		.4byte	0
 1265              		.section	.debug_ranges,"",%progbits
 1266              	.Ldebug_ranges0:
 1267 0000 00000000 		.4byte	.LFB2
 1268 0004 10000000 		.4byte	.LFE2
 1269 0008 00000000 		.4byte	.LFB3
 1270 000c 10000000 		.4byte	.LFE3
 1271 0010 00000000 		.4byte	.LFB4
 1272 0014 0C000000 		.4byte	.LFE4
 1273 0018 00000000 		.4byte	.LFB5
 1274 001c 14000000 		.4byte	.LFE5
 1275 0020 00000000 		.4byte	.LFB7
 1276 0024 0C000000 		.4byte	.LFE7
 1277 0028 00000000 		.4byte	.LFB8
 1278 002c 0C000000 		.4byte	.LFE8
 1279 0030 00000000 		.4byte	.LFB9
 1280 0034 0C000000 		.4byte	.LFE9
 1281 0038 00000000 		.4byte	.LFB10
 1282 003c 0C000000 		.4byte	.LFE10
 1283 0040 00000000 		.4byte	.LFB11
 1284 0044 0C000000 		.4byte	.LFE11
 1285 0048 00000000 		.4byte	.LFB12
 1286 004c 0C000000 		.4byte	.LFE12
 1287 0050 00000000 		.4byte	.LFB13
 1288 0054 0C000000 		.4byte	.LFE13
 1289 0058 00000000 		.4byte	.LFB6
 1290 005c 12000000 		.4byte	.LFE6
 1291 0060 00000000 		.4byte	.LFB1
 1292 0064 60000000 		.4byte	.LFE1
 1293 0068 00000000 		.4byte	.LFB0
 1294 006c 20000000 		.4byte	.LFE0
 1295 0070 00000000 		.4byte	.LFB14
 1296 0074 0C000000 		.4byte	.LFE14
 1297 0078 00000000 		.4byte	.LFB15
 1298 007c 0C000000 		.4byte	.LFE15
 1299 0080 00000000 		.4byte	0
 1300 0084 00000000 		.4byte	0
 1301              		.section	.debug_line,"",%progbits
 1302              	.Ldebug_line0:
 1303 0000 8F010000 		.section	.debug_str,"MS",%progbits,1
 1303      02004D00 
 1303      00000201 
 1303      FB0E0D00 
 1303      01010101 
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 40


 1304              	.LASF15:
 1305 0000 72656731 		.ascii	"reg16\000"
 1305      3600
 1306              	.LASF38:
 1307 0006 50574D5F 		.ascii	"PWM_ReadCompare\000"
 1307      52656164 
 1307      436F6D70 
 1307      61726500 
 1308              	.LASF33:
 1309 0016 50574D5F 		.ascii	"PWM_Init\000"
 1309      496E6974 
 1309      00
 1310              	.LASF32:
 1311 001f 50574D5F 		.ascii	"PWM_ClearFIFO\000"
 1311      436C6561 
 1311      72464946 
 1311      4F00
 1312              	.LASF22:
 1313 002d 70657269 		.ascii	"period\000"
 1313      6F6400
 1314              	.LASF37:
 1315 0034 50574D5F 		.ascii	"PWM_Start\000"
 1315      53746172 
 1315      7400
 1316              	.LASF3:
 1317 003e 73686F72 		.ascii	"short unsigned int\000"
 1317      7420756E 
 1317      7369676E 
 1317      65642069 
 1317      6E7400
 1318              	.LASF31:
 1319 0051 50574D5F 		.ascii	"PWM_ReadCapture\000"
 1319      52656164 
 1319      43617074 
 1319      75726500 
 1320              	.LASF41:
 1321 0061 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM.c\000"
 1321      6E657261 
 1321      7465645F 
 1321      536F7572 
 1321      63655C50 
 1322              	.LASF11:
 1323 0080 666C6F61 		.ascii	"float\000"
 1323      7400
 1324              	.LASF21:
 1325 0086 636F756E 		.ascii	"counter\000"
 1325      74657200 
 1326              	.LASF7:
 1327 008e 6C6F6E67 		.ascii	"long long unsigned int\000"
 1327      206C6F6E 
 1327      6720756E 
 1327      7369676E 
 1327      65642069 
 1328              	.LASF1:
 1329 00a5 756E7369 		.ascii	"unsigned char\000"
 1329      676E6564 
 1329      20636861 
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 41


 1329      7200
 1330              	.LASF14:
 1331 00b3 72656738 		.ascii	"reg8\000"
 1331      00
 1332              	.LASF5:
 1333 00b8 6C6F6E67 		.ascii	"long unsigned int\000"
 1333      20756E73 
 1333      69676E65 
 1333      6420696E 
 1333      7400
 1334              	.LASF27:
 1335 00ca 50574D5F 		.ascii	"PWM_ReadCounter\000"
 1335      52656164 
 1335      436F756E 
 1335      74657200 
 1336              	.LASF9:
 1337 00da 75696E74 		.ascii	"uint8\000"
 1337      3800
 1338              	.LASF30:
 1339 00e0 636F6E74 		.ascii	"control\000"
 1339      726F6C00 
 1340              	.LASF12:
 1341 00e8 646F7562 		.ascii	"double\000"
 1341      6C6500
 1342              	.LASF23:
 1343 00ef 50574D5F 		.ascii	"PWM_WriteCompare\000"
 1343      57726974 
 1343      65436F6D 
 1343      70617265 
 1343      00
 1344              	.LASF10:
 1345 0100 75696E74 		.ascii	"uint16\000"
 1345      313600
 1346              	.LASF44:
 1347 0107 50574D5F 		.ascii	"PWM_initVar\000"
 1347      696E6974 
 1347      56617200 
 1348              	.LASF45:
 1349 0113 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1349      74657243 
 1349      72697469 
 1349      63616C53 
 1349      65637469 
 1350              	.LASF8:
 1351 012a 756E7369 		.ascii	"unsigned int\000"
 1351      676E6564 
 1351      20696E74 
 1351      00
 1352              	.LASF46:
 1353 0137 43794578 		.ascii	"CyExitCriticalSection\000"
 1353      69744372 
 1353      69746963 
 1353      616C5365 
 1353      6374696F 
 1354              	.LASF34:
 1355 014d 72657375 		.ascii	"result\000"
 1355      6C7400
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 42


 1356              	.LASF20:
 1357 0154 50574D5F 		.ascii	"PWM_WritePeriod\000"
 1357      57726974 
 1357      65506572 
 1357      696F6400 
 1358              	.LASF25:
 1359 0164 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 1359      53657449 
 1359      6E746572 
 1359      72757074 
 1359      4D6F6465 
 1360              	.LASF40:
 1361 0179 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1361      4320342E 
 1361      392E3320 
 1361      32303135 
 1361      30333033 
 1362 01ac 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1362      20726576 
 1362      6973696F 
 1362      6E203232 
 1362      31323230 
 1363 01df 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1363      66756E63 
 1363      74696F6E 
 1363      2D736563 
 1363      74696F6E 
 1364              	.LASF16:
 1365 0207 73697A65 		.ascii	"sizetype\000"
 1365      74797065 
 1365      00
 1366              	.LASF6:
 1367 0210 6C6F6E67 		.ascii	"long long int\000"
 1367      206C6F6E 
 1367      6720696E 
 1367      7400
 1368              	.LASF26:
 1369 021e 696E7465 		.ascii	"interruptMode\000"
 1369      72727570 
 1369      744D6F64 
 1369      6500
 1370              	.LASF29:
 1371 022c 50574D5F 		.ascii	"PWM_WriteControlRegister\000"
 1371      57726974 
 1371      65436F6E 
 1371      74726F6C 
 1371      52656769 
 1372              	.LASF36:
 1373 0245 50574D5F 		.ascii	"PWM_interruptState\000"
 1373      696E7465 
 1373      72727570 
 1373      74537461 
 1373      746500
 1374              	.LASF39:
 1375 0258 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 1375      52656164 
 1375      50657269 
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 43


 1375      6F6400
 1376              	.LASF2:
 1377 0267 73686F72 		.ascii	"short int\000"
 1377      7420696E 
 1377      7400
 1378              	.LASF19:
 1379 0271 50574D5F 		.ascii	"PWM_WriteCounter\000"
 1379      57726974 
 1379      65436F75 
 1379      6E746572 
 1379      00
 1380              	.LASF18:
 1381 0282 50574D5F 		.ascii	"PWM_Stop\000"
 1381      53746F70 
 1381      00
 1382              	.LASF42:
 1383 028b 433A5C77 		.ascii	"C:\\work\\PSoC4\\VertushkaAnalog\\VertushkaAnalog.c"
 1383      6F726B5C 
 1383      50536F43 
 1383      345C5665 
 1383      72747573 
 1384 02ba 7964736E 		.ascii	"ydsn\000"
 1384      00
 1385              	.LASF4:
 1386 02bf 6C6F6E67 		.ascii	"long int\000"
 1386      20696E74 
 1386      00
 1387              	.LASF13:
 1388 02c8 63686172 		.ascii	"char\000"
 1388      00
 1389              	.LASF43:
 1390 02cd 50574D5F 		.ascii	"PWM_ReadControlRegister\000"
 1390      52656164 
 1390      436F6E74 
 1390      726F6C52 
 1390      65676973 
 1391              	.LASF0:
 1392 02e5 7369676E 		.ascii	"signed char\000"
 1392      65642063 
 1392      68617200 
 1393              	.LASF24:
 1394 02f1 636F6D70 		.ascii	"compare\000"
 1394      61726500 
 1395              	.LASF17:
 1396 02f9 50574D5F 		.ascii	"PWM_Enable\000"
 1396      456E6162 
 1396      6C6500
 1397              	.LASF28:
 1398 0304 50574D5F 		.ascii	"PWM_ReadStatusRegister\000"
 1398      52656164 
 1398      53746174 
 1398      75735265 
 1398      67697374 
 1399              	.LASF35:
 1400 031b 6374726C 		.ascii	"ctrl\000"
 1400      00
 1401              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
ARM GAS  C:\Users\Svilen\AppData\Local\Temp\ccTvC4EO.s 			page 44


